//*
// Copyright (c) 2024 Peking University and Peking University
// Changsha Institute for Computing and Digital Economy
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v4.23.2
// source: Plugin.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskInfoList []*TaskInfo `protobuf:"bytes,1,rep,name=task_info_list,json=taskInfoList,proto3" json:"task_info_list,omitempty"`
}

func (x *StartHookRequest) Reset() {
	*x = StartHookRequest{}
	mi := &file_Plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartHookRequest) ProtoMessage() {}

func (x *StartHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartHookRequest.ProtoReflect.Descriptor instead.
func (*StartHookRequest) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{0}
}

func (x *StartHookRequest) GetTaskInfoList() []*TaskInfo {
	if x != nil {
		return x.TaskInfoList
	}
	return nil
}

type StartHookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*StartHookReply_TaskIdReply `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *StartHookReply) Reset() {
	*x = StartHookReply{}
	mi := &file_Plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartHookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartHookReply) ProtoMessage() {}

func (x *StartHookReply) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartHookReply.ProtoReflect.Descriptor instead.
func (*StartHookReply) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{1}
}

func (x *StartHookReply) GetResult() []*StartHookReply_TaskIdReply {
	if x != nil {
		return x.Result
	}
	return nil
}

type EndHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskInfoList []*TaskInfo `protobuf:"bytes,1,rep,name=task_info_list,json=taskInfoList,proto3" json:"task_info_list,omitempty"`
}

func (x *EndHookRequest) Reset() {
	*x = EndHookRequest{}
	mi := &file_Plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndHookRequest) ProtoMessage() {}

func (x *EndHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndHookRequest.ProtoReflect.Descriptor instead.
func (*EndHookRequest) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{2}
}

func (x *EndHookRequest) GetTaskInfoList() []*TaskInfo {
	if x != nil {
		return x.TaskInfoList
	}
	return nil
}

type EndHookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*EndHookReply_TaskIdReply `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *EndHookReply) Reset() {
	*x = EndHookReply{}
	mi := &file_Plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndHookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndHookReply) ProtoMessage() {}

func (x *EndHookReply) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndHookReply.ProtoReflect.Descriptor instead.
func (*EndHookReply) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{3}
}

func (x *EndHookReply) GetResult() []*EndHookReply_TaskIdReply {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateCgroupHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   uint32                   `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Cgroup   string                   `protobuf:"bytes,2,opt,name=cgroup,proto3" json:"cgroup,omitempty"`
	Resource *DedicatedResourceInNode `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *CreateCgroupHookRequest) Reset() {
	*x = CreateCgroupHookRequest{}
	mi := &file_Plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCgroupHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCgroupHookRequest) ProtoMessage() {}

func (x *CreateCgroupHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCgroupHookRequest.ProtoReflect.Descriptor instead.
func (*CreateCgroupHookRequest) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCgroupHookRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *CreateCgroupHookRequest) GetCgroup() string {
	if x != nil {
		return x.Cgroup
	}
	return ""
}

func (x *CreateCgroupHookRequest) GetResource() *DedicatedResourceInNode {
	if x != nil {
		return x.Resource
	}
	return nil
}

type CreateCgroupHookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CreateCgroupHookReply) Reset() {
	*x = CreateCgroupHookReply{}
	mi := &file_Plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCgroupHookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCgroupHookReply) ProtoMessage() {}

func (x *CreateCgroupHookReply) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCgroupHookReply.ProtoReflect.Descriptor instead.
func (*CreateCgroupHookReply) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCgroupHookReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type DestroyCgroupHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Cgroup string `protobuf:"bytes,2,opt,name=cgroup,proto3" json:"cgroup,omitempty"`
}

func (x *DestroyCgroupHookRequest) Reset() {
	*x = DestroyCgroupHookRequest{}
	mi := &file_Plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyCgroupHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyCgroupHookRequest) ProtoMessage() {}

func (x *DestroyCgroupHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyCgroupHookRequest.ProtoReflect.Descriptor instead.
func (*DestroyCgroupHookRequest) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{6}
}

func (x *DestroyCgroupHookRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *DestroyCgroupHookRequest) GetCgroup() string {
	if x != nil {
		return x.Cgroup
	}
	return ""
}

type DestroyCgroupHookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *DestroyCgroupHookReply) Reset() {
	*x = DestroyCgroupHookReply{}
	mi := &file_Plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyCgroupHookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyCgroupHookReply) ProtoMessage() {}

func (x *DestroyCgroupHookReply) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyCgroupHookReply.ProtoReflect.Descriptor instead.
func (*DestroyCgroupHookReply) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{7}
}

func (x *DestroyCgroupHookReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StartHookReply_TaskIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok            bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TaskId        uint32 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FailureReason string `protobuf:"bytes,3,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
}

func (x *StartHookReply_TaskIdReply) Reset() {
	*x = StartHookReply_TaskIdReply{}
	mi := &file_Plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartHookReply_TaskIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartHookReply_TaskIdReply) ProtoMessage() {}

func (x *StartHookReply_TaskIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartHookReply_TaskIdReply.ProtoReflect.Descriptor instead.
func (*StartHookReply_TaskIdReply) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StartHookReply_TaskIdReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StartHookReply_TaskIdReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *StartHookReply_TaskIdReply) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

type EndHookReply_TaskIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok            bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	TaskId        uint32 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FailureReason string `protobuf:"bytes,3,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
}

func (x *EndHookReply_TaskIdReply) Reset() {
	*x = EndHookReply_TaskIdReply{}
	mi := &file_Plugin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndHookReply_TaskIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndHookReply_TaskIdReply) ProtoMessage() {}

func (x *EndHookReply_TaskIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_Plugin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndHookReply_TaskIdReply.ProtoReflect.Descriptor instead.
func (*EndHookReply_TaskIdReply) Descriptor() ([]byte, []int) {
	return file_Plugin_proto_rawDescGZIP(), []int{3, 0}
}

func (x *EndHookReply_TaskIdReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *EndHookReply_TaskIdReply) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *EndHookReply_TaskIdReply) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

var File_Plugin_proto protoreflect.FileDescriptor

var file_Plugin_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x1a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x44, 0x65, 0x66, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x5d, 0x0a,
	0x0b, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x0e,
	0x45, 0x6e, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x0c, 0x45,
	0x6e, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x72,
	0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x45, 0x6e, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x1a, 0x5d, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x8b, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3f, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x27, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x4b, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x32, 0x89, 0x03,
	0x0a, 0x0c, 0x43, 0x72, 0x61, 0x6e, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x12, 0x53,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x23, 0x2e, 0x63, 0x72,
	0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x4d, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x21,
	0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x45, 0x6e, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6e, 0x64, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x68, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x2a, 0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6b, 0x0a, 0x11,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6f,
	0x6b, 0x12, 0x2b, 0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x63, 0x72, 0x61, 0x6e, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Plugin_proto_rawDescOnce sync.Once
	file_Plugin_proto_rawDescData = file_Plugin_proto_rawDesc
)

func file_Plugin_proto_rawDescGZIP() []byte {
	file_Plugin_proto_rawDescOnce.Do(func() {
		file_Plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_Plugin_proto_rawDescData)
	})
	return file_Plugin_proto_rawDescData
}

var file_Plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_Plugin_proto_goTypes = []any{
	(*StartHookRequest)(nil),           // 0: crane.grpc.plugin.StartHookRequest
	(*StartHookReply)(nil),             // 1: crane.grpc.plugin.StartHookReply
	(*EndHookRequest)(nil),             // 2: crane.grpc.plugin.EndHookRequest
	(*EndHookReply)(nil),               // 3: crane.grpc.plugin.EndHookReply
	(*CreateCgroupHookRequest)(nil),    // 4: crane.grpc.plugin.CreateCgroupHookRequest
	(*CreateCgroupHookReply)(nil),      // 5: crane.grpc.plugin.CreateCgroupHookReply
	(*DestroyCgroupHookRequest)(nil),   // 6: crane.grpc.plugin.DestroyCgroupHookRequest
	(*DestroyCgroupHookReply)(nil),     // 7: crane.grpc.plugin.DestroyCgroupHookReply
	(*StartHookReply_TaskIdReply)(nil), // 8: crane.grpc.plugin.StartHookReply.TaskIdReply
	(*EndHookReply_TaskIdReply)(nil),   // 9: crane.grpc.plugin.EndHookReply.TaskIdReply
	(*TaskInfo)(nil),                   // 10: crane.grpc.TaskInfo
	(*DedicatedResourceInNode)(nil),    // 11: crane.grpc.DedicatedResourceInNode
}
var file_Plugin_proto_depIdxs = []int32{
	10, // 0: crane.grpc.plugin.StartHookRequest.task_info_list:type_name -> crane.grpc.TaskInfo
	8,  // 1: crane.grpc.plugin.StartHookReply.result:type_name -> crane.grpc.plugin.StartHookReply.TaskIdReply
	10, // 2: crane.grpc.plugin.EndHookRequest.task_info_list:type_name -> crane.grpc.TaskInfo
	9,  // 3: crane.grpc.plugin.EndHookReply.result:type_name -> crane.grpc.plugin.EndHookReply.TaskIdReply
	11, // 4: crane.grpc.plugin.CreateCgroupHookRequest.resource:type_name -> crane.grpc.DedicatedResourceInNode
	0,  // 5: crane.grpc.plugin.CranePluginD.StartHook:input_type -> crane.grpc.plugin.StartHookRequest
	2,  // 6: crane.grpc.plugin.CranePluginD.EndHook:input_type -> crane.grpc.plugin.EndHookRequest
	4,  // 7: crane.grpc.plugin.CranePluginD.CreateCgroupHook:input_type -> crane.grpc.plugin.CreateCgroupHookRequest
	6,  // 8: crane.grpc.plugin.CranePluginD.DestroyCgroupHook:input_type -> crane.grpc.plugin.DestroyCgroupHookRequest
	1,  // 9: crane.grpc.plugin.CranePluginD.StartHook:output_type -> crane.grpc.plugin.StartHookReply
	3,  // 10: crane.grpc.plugin.CranePluginD.EndHook:output_type -> crane.grpc.plugin.EndHookReply
	5,  // 11: crane.grpc.plugin.CranePluginD.CreateCgroupHook:output_type -> crane.grpc.plugin.CreateCgroupHookReply
	7,  // 12: crane.grpc.plugin.CranePluginD.DestroyCgroupHook:output_type -> crane.grpc.plugin.DestroyCgroupHookReply
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_Plugin_proto_init() }
func file_Plugin_proto_init() {
	if File_Plugin_proto != nil {
		return
	}
	file_PublicDefs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Plugin_proto_goTypes,
		DependencyIndexes: file_Plugin_proto_depIdxs,
		MessageInfos:      file_Plugin_proto_msgTypes,
	}.Build()
	File_Plugin_proto = out.File
	file_Plugin_proto_rawDesc = nil
	file_Plugin_proto_goTypes = nil
	file_Plugin_proto_depIdxs = nil
}
