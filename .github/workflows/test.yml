name: Test

on:
  push:
    branches: [ "master" ]
    paths:
    - "**/*.go"
    - "**/*.proto"
  pull_request:
    branches: [ "master" ]
    paths:
    - "**/*.go"
    - "**/*.proto"
  workflow_dispatch:
    inputs:
      upload_artifact:
        description: Upload artifact
        type: boolean
        default: false

env:
  PROTOC_VERSION: "23.2"
  GO_VERSION: "1.22"

jobs:

  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Protoc
      uses: actions/cache@v4
      with:
        path: ${{ runner.tool_cache }}/protoc.zip
        key: ${{ runner.os }}-protoc-${{ env.PROTOC_VERSION }}

    - name: Install Protoc
      working-directory: ${{ runner.tool_cache }}
      run: |
        if ! [[ -e protoc.zip ]]; then
          echo "Downloading protoc version $PROTOC_VERSION"
          wget https://github.com/protocolbuffers/protobuf/releases/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-linux-x86_64.zip -O protoc.zip
        else
          echo "protoc version $PROTOC_VERSION is already cached."
        fi

        unzip -q protoc.zip -d protoc
        sudo mv protoc/bin/protoc /usr/local/bin/
        sudo mv protoc/include/google /usr/local/include/
        
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest &&
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

    - name: Build
      run: make all |& tee build.log

    - name: Upload artifact
      if: ${{ inputs.upload_artifact }}
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: |
          ./build/
          ./build.log
        if-no-files-found: error
        retention-days: 30
        overwrite: true
